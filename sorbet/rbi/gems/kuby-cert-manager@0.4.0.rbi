# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `kuby-cert-manager` gem.
# Please instead update this file by running `bin/tapioca gem kuby-cert-manager`.

# typed: strong
module Kuby
  class << self
    def define(name, &block); end
    def definition; end
    def dependables; end
    def distros; end
    def env; end
    def env=(env_name); end
    def environment(name = T.unsafe(nil)); end
    def load!(config_file = T.unsafe(nil)); end
    def load_rake_tasks!; end
    def logger; end
    def logger=(_arg0); end
    def packages; end
    def plugins; end
    def providers; end
    def register_dependable(name, version_or_callable); end
    def register_distro(distro_name, distro_klass); end
    def register_package(package_name, package_def = T.unsafe(nil)); end
    def register_plugin(*args, **kwargs); end
    def register_provider(provider_name, provider_klass); end
  end
end

module Kuby::CertManager
  extend ::Kuby::CertManager::Entrypoint
end

module Kuby::CertManager::DSL; end
module Kuby::CertManager::DSL::Acme; end
module Kuby::CertManager::DSL::Acme::V1; end

class Kuby::CertManager::DSL::Acme::V1::Challenge < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def authorization_url(*args); end
  def dns_name(*args); end
  def issuer_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def issuer_ref_present?; end

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def solver(*args, &block); end

  sig { returns(T::Boolean) }
  def solver_present?; end

  def token(*args); end
  def type(*args); end
  def url(*args); end
  def wildcard(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecIssuerRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group(*args); end
  def kind(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolver < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def dns01(*args, &block); end

  sig { returns(T::Boolean) }
  def dns01_present?; end

  def http01(*args, &block); end

  sig { returns(T::Boolean) }
  def http01_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def selector(*args, &block); end

  sig { returns(T::Boolean) }
  def selector_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_dns_present?; end

  def akamai(*args, &block); end

  sig { returns(T::Boolean) }
  def akamai_present?; end

  def azure_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def azure_dns_present?; end

  def cloud_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def cloud_dns_present?; end

  def cloudflare(*args, &block); end

  sig { returns(T::Boolean) }
  def cloudflare_present?; end

  def cname_strategy(*args); end
  def digitalocean(*args, &block); end

  sig { returns(T::Boolean) }
  def digitalocean_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def rfc2136(*args, &block); end

  sig { returns(T::Boolean) }
  def rfc2136_present?; end

  def route53(*args, &block); end

  sig { returns(T::Boolean) }
  def route53_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def webhook(*args, &block); end

  sig { returns(T::Boolean) }
  def webhook_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AcmeDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def account_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def account_secret_ref_present?; end

  def host(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AcmeDNSAccountSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Akamai < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def access_token_secret_ref_present?; end

  def client_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_secret_secret_ref_present?; end

  def client_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_token_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_consumer_domain(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AkamaiAccessTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AkamaiClientSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AkamaiClientTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AzureDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def client_id(*args); end
  def client_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_secret_secret_ref_present?; end

  def environment(*args); end
  def hosted_zone_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def managed_identity(*args, &block); end

  sig { returns(T::Boolean) }
  def managed_identity_present?; end

  def resource_group_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def subscription_id(*args); end
  def tenant_id(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AzureDNSClientSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01AzureDNSManagedIdentity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def client_id(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def resource_id(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01CloudDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def hosted_zone_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def project(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_account_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def service_account_secret_ref_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01CloudDNSServiceAccountSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Cloudflare < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_key_secret_ref_present?; end

  def api_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_token_secret_ref_present?; end

  def email(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01CloudflareApiKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01CloudflareApiTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Digitalocean < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def token_secret_ref_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01DigitaloceanTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Rfc2136 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def nameserver(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def tsig_algorithm(*args); end
  def tsig_key_name(*args); end
  def tsig_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def tsig_secret_secret_ref_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Rfc2136TsigSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Route53 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_key_id(*args); end
  def hosted_zone_id(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def region(*args); end
  def role(*args); end
  def secret_access_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_access_key_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Route53SecretAccessKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverDns01Webhook < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def solver_name(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def gateway_http_route(*args, &block); end

  sig { returns(T::Boolean) }
  def gateway_http_route_present?; end

  def ingress(*args, &block); end

  sig { returns(T::Boolean) }
  def ingress_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01GatewayHTTPRoute < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_type(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01Ingress < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def class_field(*args); end
  def ingress_template(*args, &block); end

  sig { returns(T::Boolean) }
  def ingress_template_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end
  def pod_template(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_template_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_type(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressIngressTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressIngressTemplateMetadata < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateMetadata < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def affinity_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def node_selector(&block); end

  def priority_class_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_account_name(*args); end
  def toleration(elem_name = T.unsafe(nil), &block); end
  def tolerations; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def node_affinity_present?; end

  def pod_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_present?; end

  def pod_anti_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_anti_affinity_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(*args, &block); end

  sig { returns(T::Boolean) }
  def required_during_scheduling_ignored_during_execution_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preference(*args, &block); end

  sig { returns(T::Boolean) }
  def preference_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_selector_term(elem_name = T.unsafe(nil), &block); end
  def node_selector_terms; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverHttp01IngressPodTemplateSpecTolerations < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def effect(*args); end
  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def toleration_seconds(*args); end
  def value(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeSpecSolverSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def dns_names(*args); end
  def dns_zones(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::ChallengeStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def presented(*args); end
  def processing(*args); end
  def reason(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def state(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::Order < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CertManager::DSL::Acme::V1::OrderList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::OrderSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def common_name(*args); end
  def dns_names(*args); end
  def duration(*args); end
  def ip_addresses(*args); end
  def issuer_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def issuer_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def request(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::OrderSpecIssuerRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group(*args); end
  def kind(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::Acme::V1::OrderStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def authorization(elem_name = T.unsafe(nil), &block); end
  def authorizations; end
  def certificate(*args); end
  def failure_time(*args); end
  def finalize_url(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def reason(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def state(*args); end
  def url(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::OrderStatusAuthorizations < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def challenge(elem_name = T.unsafe(nil), &block); end
  def challenges; end
  def identifier(*args); end
  def initial_state(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def url(*args); end
  def wildcard(*args); end
end

class Kuby::CertManager::DSL::Acme::V1::OrderStatusAuthorizationsChallenges < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def token(*args); end
  def type(*args); end
  def url(*args); end
end

module Kuby::CertManager::DSL::CertManager; end
module Kuby::CertManager::DSL::CertManager::V1; end

class Kuby::CertManager::DSL::CertManager::V1::Certificate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateRequest < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateRequestList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateRequestSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def duration(*args); end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def extra(&block); end

  def groups(*args); end
  def is_ca(*args); end
  def issuer_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def issuer_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def request(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def uid(*args); end
  def usages(*args); end
  def username(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateRequestSpecIssuerRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group(*args); end
  def kind(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateRequestStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def ca(*args); end
  def certificate(*args); end
  def condition(elem_name = T.unsafe(nil), &block); end
  def conditions; end
  def failure_time(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateRequestStatusConditions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_transition_time(*args); end
  def message(*args); end
  def reason(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def status(*args); end
  def type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def additional_output_format(elem_name = T.unsafe(nil), &block); end
  def additional_output_formats; end
  def common_name(*args); end
  def dns_names(*args); end
  def duration(*args); end
  def email_addresses(*args); end
  def encode_usages_in_request(*args); end
  def ip_addresses(*args); end
  def is_ca(*args); end
  def issuer_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def issuer_ref_present?; end

  def keystores(*args, &block); end

  sig { returns(T::Boolean) }
  def keystores_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def private_key(*args, &block); end

  sig { returns(T::Boolean) }
  def private_key_present?; end

  def renew_before(*args); end
  def revision_history_limit(*args); end
  def secret_name(*args); end
  def secret_template(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_template_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def subject(*args, &block); end

  sig { returns(T::Boolean) }
  def subject_present?; end

  def uris(*args); end
  def usages(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecAdditionalOutputFormats < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecIssuerRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group(*args); end
  def kind(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecKeystores < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def jks(*args, &block); end

  sig { returns(T::Boolean) }
  def jks_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def pkcs12(*args, &block); end

  sig { returns(T::Boolean) }
  def pkcs12_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecKeystoresJks < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def create(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def password_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def password_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecKeystoresJksPasswordSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecKeystoresPkcs12 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def create(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def password_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def password_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecKeystoresPkcs12PasswordSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecPrivateKey < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def algorithm(*args); end
  def encoding(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def rotation_policy(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def size(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecSecretTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateSpecSubject < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def countries(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def localities(*args); end
  def organizational_units(*args); end
  def organizations(*args); end
  def postal_codes(*args); end
  def provinces(*args); end
  def serial_number(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def street_addresses(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def condition(elem_name = T.unsafe(nil), &block); end
  def conditions; end

  sig { returns(Symbol) }
  def kind_sym; end

  def last_failure_time(*args); end
  def next_private_key_secret_name(*args); end
  def not_after(*args); end
  def not_before(*args); end
  def renewal_time(*args); end
  def revision(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::CertificateStatusConditions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_transition_time(*args); end
  def message(*args); end
  def observed_generation(*args); end
  def reason(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def status(*args); end
  def type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuer < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_present?; end

  def ca(*args, &block); end

  sig { returns(T::Boolean) }
  def ca_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def self_signed(*args, &block); end

  sig { returns(T::Boolean) }
  def self_signed_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def vault(*args, &block); end

  sig { returns(T::Boolean) }
  def vault_present?; end

  def venafi(*args, &block); end

  sig { returns(T::Boolean) }
  def venafi_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcme < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def disable_account_key_generation(*args); end
  def email(*args); end
  def enable_duration_feature(*args); end
  def external_account_binding(*args, &block); end

  sig { returns(T::Boolean) }
  def external_account_binding_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_chain(*args); end
  def private_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def private_key_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def server(*args); end
  def skip_tls_verify(*args); end
  def solver(elem_name = T.unsafe(nil), &block); end
  def solvers; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeExternalAccountBinding < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key_algorithm(*args); end
  def key_id(*args); end
  def key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def key_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmePrivateKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolvers < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def dns01(*args, &block); end

  sig { returns(T::Boolean) }
  def dns01_present?; end

  def http01(*args, &block); end

  sig { returns(T::Boolean) }
  def http01_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def selector(*args, &block); end

  sig { returns(T::Boolean) }
  def selector_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_dns_present?; end

  def akamai(*args, &block); end

  sig { returns(T::Boolean) }
  def akamai_present?; end

  def azure_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def azure_dns_present?; end

  def cloud_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def cloud_dns_present?; end

  def cloudflare(*args, &block); end

  sig { returns(T::Boolean) }
  def cloudflare_present?; end

  def cname_strategy(*args); end
  def digitalocean(*args, &block); end

  sig { returns(T::Boolean) }
  def digitalocean_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def rfc2136(*args, &block); end

  sig { returns(T::Boolean) }
  def rfc2136_present?; end

  def route53(*args, &block); end

  sig { returns(T::Boolean) }
  def route53_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def webhook(*args, &block); end

  sig { returns(T::Boolean) }
  def webhook_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AcmeDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def account_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def account_secret_ref_present?; end

  def host(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AcmeDNSAccountSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Akamai < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def access_token_secret_ref_present?; end

  def client_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_secret_secret_ref_present?; end

  def client_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_token_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_consumer_domain(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AzureDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def client_id(*args); end
  def client_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_secret_secret_ref_present?; end

  def environment(*args); end
  def hosted_zone_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def managed_identity(*args, &block); end

  sig { returns(T::Boolean) }
  def managed_identity_present?; end

  def resource_group_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def subscription_id(*args); end
  def tenant_id(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AzureDNSClientSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01AzureDNSManagedIdentity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def client_id(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def resource_id(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01CloudDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def hosted_zone_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def project(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_account_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def service_account_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01CloudDNSServiceAccountSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Cloudflare < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_key_secret_ref_present?; end

  def api_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_token_secret_ref_present?; end

  def email(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Digitalocean < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def token_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Rfc2136 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def nameserver(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def tsig_algorithm(*args); end
  def tsig_key_name(*args); end
  def tsig_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def tsig_secret_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Route53 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_key_id(*args); end
  def hosted_zone_id(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def region(*args); end
  def role(*args); end
  def secret_access_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_access_key_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversDns01Webhook < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def solver_name(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def gateway_http_route(*args, &block); end

  sig { returns(T::Boolean) }
  def gateway_http_route_present?; end

  def ingress(*args, &block); end

  sig { returns(T::Boolean) }
  def ingress_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01GatewayHTTPRoute < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01Ingress < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def class_field(*args); end
  def ingress_template(*args, &block); end

  sig { returns(T::Boolean) }
  def ingress_template_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end
  def pod_template(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_template_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def affinity_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def node_selector(&block); end

  def priority_class_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_account_name(*args); end
  def toleration(elem_name = T.unsafe(nil), &block); end
  def tolerations; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def node_affinity_present?; end

  def pod_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_present?; end

  def pod_anti_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_anti_affinity_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(*args, &block); end

  sig { returns(T::Boolean) }
  def required_during_scheduling_ignored_during_execution_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preference(*args, &block); end

  sig { returns(T::Boolean) }
  def preference_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_selector_term(elem_name = T.unsafe(nil), &block); end
  def node_selector_terms; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def effect(*args); end
  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def toleration_seconds(*args); end
  def value(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecAcmeSolversSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def dns_names(*args); end
  def dns_zones(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecCa < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def crl_distribution_points(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def ocsp_servers(*args); end
  def secret_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecSelfSigned < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def crl_distribution_points(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVault < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def auth(*args, &block); end

  sig { returns(T::Boolean) }
  def auth_present?; end

  def ca_bundle(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def namespace(*args); end
  def path(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def server(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVaultAuth < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def app_role(*args, &block); end

  sig { returns(T::Boolean) }
  def app_role_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def kubernetes(*args, &block); end

  sig { returns(T::Boolean) }
  def kubernetes_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def token_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVaultAuthAppRole < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def path(*args); end
  def role_id(*args); end
  def secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVaultAuthAppRoleSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVaultAuthKubernetes < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def mount_path(*args); end
  def role(*args); end
  def secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVaultAuthKubernetesSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVaultAuthTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVenafi < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def cloud(*args, &block); end

  sig { returns(T::Boolean) }
  def cloud_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def tpp(*args, &block); end

  sig { returns(T::Boolean) }
  def tpp_present?; end

  def zone(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVenafiCloud < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_token_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def url(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVenafiCloudApiTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVenafiTpp < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def ca_bundle(*args); end
  def credentials_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def credentials_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def url(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerSpecVenafiTppCredentialsRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_present?; end

  def condition(elem_name = T.unsafe(nil), &block); end
  def conditions; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerStatusAcme < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_registered_email(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def uri(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerStatusConditions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_transition_time(*args); end
  def message(*args); end
  def observed_generation(*args); end
  def reason(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def status(*args); end
  def type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::Issuer < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_present?; end

  def ca(*args, &block); end

  sig { returns(T::Boolean) }
  def ca_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def self_signed(*args, &block); end

  sig { returns(T::Boolean) }
  def self_signed_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def vault(*args, &block); end

  sig { returns(T::Boolean) }
  def vault_present?; end

  def venafi(*args, &block); end

  sig { returns(T::Boolean) }
  def venafi_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcme < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def disable_account_key_generation(*args); end
  def email(*args); end
  def enable_duration_feature(*args); end
  def external_account_binding(*args, &block); end

  sig { returns(T::Boolean) }
  def external_account_binding_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_chain(*args); end
  def private_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def private_key_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def server(*args); end
  def skip_tls_verify(*args); end
  def solver(elem_name = T.unsafe(nil), &block); end
  def solvers; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeExternalAccountBinding < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key_algorithm(*args); end
  def key_id(*args); end
  def key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def key_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeExternalAccountBindingKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmePrivateKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolvers < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def dns01(*args, &block); end

  sig { returns(T::Boolean) }
  def dns01_present?; end

  def http01(*args, &block); end

  sig { returns(T::Boolean) }
  def http01_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def selector(*args, &block); end

  sig { returns(T::Boolean) }
  def selector_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_dns_present?; end

  def akamai(*args, &block); end

  sig { returns(T::Boolean) }
  def akamai_present?; end

  def azure_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def azure_dns_present?; end

  def cloud_dns(*args, &block); end

  sig { returns(T::Boolean) }
  def cloud_dns_present?; end

  def cloudflare(*args, &block); end

  sig { returns(T::Boolean) }
  def cloudflare_present?; end

  def cname_strategy(*args); end
  def digitalocean(*args, &block); end

  sig { returns(T::Boolean) }
  def digitalocean_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def rfc2136(*args, &block); end

  sig { returns(T::Boolean) }
  def rfc2136_present?; end

  def route53(*args, &block); end

  sig { returns(T::Boolean) }
  def route53_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def webhook(*args, &block); end

  sig { returns(T::Boolean) }
  def webhook_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AcmeDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def account_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def account_secret_ref_present?; end

  def host(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AcmeDNSAccountSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Akamai < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def access_token_secret_ref_present?; end

  def client_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_secret_secret_ref_present?; end

  def client_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_token_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_consumer_domain(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AzureDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def client_id(*args); end
  def client_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def client_secret_secret_ref_present?; end

  def environment(*args); end
  def hosted_zone_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def managed_identity(*args, &block); end

  sig { returns(T::Boolean) }
  def managed_identity_present?; end

  def resource_group_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def subscription_id(*args); end
  def tenant_id(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AzureDNSClientSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01AzureDNSManagedIdentity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def client_id(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def resource_id(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01CloudDNS < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def hosted_zone_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def project(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_account_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def service_account_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01CloudDNSServiceAccountSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Cloudflare < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_key_secret_ref_present?; end

  def api_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_token_secret_ref_present?; end

  def email(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Digitalocean < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def token_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Rfc2136 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def nameserver(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def tsig_algorithm(*args); end
  def tsig_key_name(*args); end
  def tsig_secret_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def tsig_secret_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Route53 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_key_id(*args); end
  def hosted_zone_id(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def region(*args); end
  def role(*args); end
  def secret_access_key_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_access_key_secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversDns01Webhook < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def group_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def solver_name(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01 < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def gateway_http_route(*args, &block); end

  sig { returns(T::Boolean) }
  def gateway_http_route_present?; end

  def ingress(*args, &block); end

  sig { returns(T::Boolean) }
  def ingress_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01GatewayHTTPRoute < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01Ingress < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def class_field(*args); end
  def ingress_template(*args, &block); end

  sig { returns(T::Boolean) }
  def ingress_template_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end
  def pod_template(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_template_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_type(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressIngressTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplate < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def annotations(&block); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def affinity_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def node_selector(&block); end

  def priority_class_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def service_account_name(*args); end
  def toleration(elem_name = T.unsafe(nil), &block); end
  def tolerations; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def node_affinity_present?; end

  def pod_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_present?; end

  def pod_anti_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_anti_affinity_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(*args, &block); end

  sig { returns(T::Boolean) }
  def required_during_scheduling_ignored_during_execution_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preference(*args, &block); end

  sig { returns(T::Boolean) }
  def preference_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_selector_term(elem_name = T.unsafe(nil), &block); end
  def node_selector_terms; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespace_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def namespace_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def effect(*args); end
  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def toleration_seconds(*args); end
  def value(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecAcmeSolversSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def dns_names(*args); end
  def dns_zones(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecCa < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def crl_distribution_points(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def ocsp_servers(*args); end
  def secret_name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecSelfSigned < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def crl_distribution_points(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVault < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def auth(*args, &block); end

  sig { returns(T::Boolean) }
  def auth_present?; end

  def ca_bundle(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def namespace(*args); end
  def path(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def server(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVaultAuth < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def app_role(*args, &block); end

  sig { returns(T::Boolean) }
  def app_role_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def kubernetes(*args, &block); end

  sig { returns(T::Boolean) }
  def kubernetes_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def token_secret_ref_present?; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVaultAuthAppRole < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def path(*args); end
  def role_id(*args); end
  def secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVaultAuthAppRoleSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVaultAuthKubernetes < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def mount_path(*args); end
  def role(*args); end
  def secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVaultAuthKubernetesSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVaultAuthTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVenafi < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def cloud(*args, &block); end

  sig { returns(T::Boolean) }
  def cloud_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def tpp(*args, &block); end

  sig { returns(T::Boolean) }
  def tpp_present?; end

  def zone(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVenafiCloud < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_token_secret_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def api_token_secret_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def url(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVenafiCloudApiTokenSecretRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVenafiTpp < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def ca_bundle(*args); end
  def credentials_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def credentials_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def url(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerSpecVenafiTppCredentialsRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def acme(*args, &block); end

  sig { returns(T::Boolean) }
  def acme_present?; end

  def condition(elem_name = T.unsafe(nil), &block); end
  def conditions; end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerStatusAcme < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_registered_email(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def uri(*args); end
end

class Kuby::CertManager::DSL::CertManager::V1::IssuerStatusConditions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_transition_time(*args); end
  def message(*args); end
  def observed_generation(*args); end
  def reason(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def status(*args); end
  def type(*args); end
end

module Kuby::CertManager::Entrypoint
  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::Certificate) }
  def certificate(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::CertificateList) }
  def certificate_list(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::CertificateRequest) }
  def certificate_request(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::CertificateRequestList) }
  def certificate_request_list(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::Acme::V1::Challenge) }
  def challenge(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::Acme::V1::ChallengeList) }
  def challenge_list(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::ClusterIssuer) }
  def cluster_issuer(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::ClusterIssuerList) }
  def cluster_issuer_list(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::Issuer) }
  def issuer(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::CertManager::V1::IssuerList) }
  def issuer_list(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::Acme::V1::Order) }
  def order(&block); end

  sig { params(block: T.proc.void).returns(::Kuby::CertManager::DSL::Acme::V1::OrderList) }
  def order_list(&block); end
end

class Kuby::CertManager::Plugin < ::Kuby::Plugin
  def annotate_ingress(ingress); end
  def configure(&block); end
  def resources; end
  def setup; end

  private

  def after_initialize; end
  def cluster_issuer; end
  def install_cert_manager; end
  def issuer_name; end
  def kubernetes_cli; end
  def spec; end
end

Kuby::CertManager::Plugin::CERT_MANAGER_RESOURCES = T.let(T.unsafe(nil), Array)
Kuby::CertManager::Plugin::CERT_MANAGER_VERSION = T.let(T.unsafe(nil), String)

class Kuby::CertManager::Plugin::Config
  include ::KubeDSL::ValueFields::InstanceMethods
  extend ::KubeDSL::ValueFields
  extend ::KubeDSL::ValueFields::ClassMethods

  def email(*args); end
  def server_url(*args); end
  def skip_tls_verify(*args); end
end

Kuby::CertManager::Plugin::DEFAULT_SERVER_URL = T.let(T.unsafe(nil), String)
Kuby::CertManager::Plugin::NAMESPACE = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_DB_PASSWORD = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_DB_USER = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_ENV = T.let(T.unsafe(nil), String)
Kuby::VERSION = T.let(T.unsafe(nil), String)
