# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `kuby-kind` gem.
# Please instead update this file by running `bin/tapioca gem kuby-kind`.

module Kuby
  class << self
    def define(name, &block); end
    def definition; end
    def dependables; end
    def distros; end
    def env; end
    def env=(env_name); end
    def environment(name = T.unsafe(nil)); end
    def load!(config_file = T.unsafe(nil)); end
    def load_rake_tasks!; end
    def logger; end
    def logger=(_arg0); end
    def packages; end
    def plugins; end
    def providers; end
    def register_dependable(name, version_or_callable); end
    def register_distro(distro_name, distro_klass); end
    def register_package(package_name, package_def = T.unsafe(nil)); end
    def register_plugin(*args, **kwargs); end
    def register_provider(provider_name, provider_klass); end
  end
end

Kuby::DEFAULT_DB_PASSWORD = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_DB_USER = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_ENV = T.let(T.unsafe(nil), String)
module Kuby::Kind; end

class Kuby::Kind::Config
  def initialize(&block); end

  def expose_port(port); end
  def exposed_ports; end
  def hide_port(port); end
  def kubernetes_version; end
  def use_kubernetes_version(version); end
end

class Kuby::Kind::Provider < ::Kuby::Kubernetes::Provider
  def after_configuration; end
  def config; end
  def configure(&block); end
  def deploy; end
  def kubeconfig_path; end
  def setup; end
  def storage_class_name; end

  private

  def after_initialize; end
  def cluster_defined?; end
  def cluster_name; end
  def cluster_reachable?; end
  def cluster_running?; end
  def context; end
  def create_cluster!; end
  def delete_cluster!; end
  def ensure_cluster!; end
  def kubeconfig_dir; end
  def load_images; end
  def make_cluster_config; end
  def recreate_cluster!; end
end

Kuby::Kind::Provider::DEFAULT_EXPOSED_PORTS = T.let(T.unsafe(nil), Array)
Kuby::Kind::Provider::STORAGE_CLASS_NAME = T.let(T.unsafe(nil), String)
Kuby::VERSION = T.let(T.unsafe(nil), String)
